<?xml version="1.0"?>
<!--
# Copyright 2022 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
-->
<measurement_specification>
	<name>Layered measurement specification</name>
	<uuid>43d00605-c585-4507-83f3-37b9261bc157</uuid>
	<description>
	  This is a measurement specification to perform a layered measurement.
	  This will aggregate measurements from multiple privilege levels (including a
	  userspace measurement at the current privilege level).
	</description>

	<!-- The variables listed below are measured according to the instructions
	     given here. Additional measurement variables are identified by retrieving 
	     a 'feature' of a completed measurement, and are subsequently measured using 
	     the referenced instruction.-->
	<instructions>
	  <!-- Request measurements of the higher privilege level  -->
	  <instruction type="simple" name="request">
            <target_type      name="system_target_type"  magic="0x57513777"/>
            <address_type     name="dynamic_measurement_request_address_space"  magic="0x7EF11777" />
            <measurement_type name="blob" magic="0xB10BB10B"/>
          </instruction>

	  <!-- List and gather metadata on all of the processes running on the system.
	       Then, list all of the open files for each process, and hash each file. -->
	  <instruction type="submeasure" name="list_processes">
	    <target_type name="process_target_type" magic="0x091D091D" />
	    <address_type name="unit_address_space" magic="0x50EC50EC"/>
	    <measurement_type name="process_metadata_measurement_type" magic="3200" />
            <!-- XXX - change these to "_sha1hash" for centos, and write 
                 modify rpm_pkg_inv to save hashs and write rpm_check_asp 
                 equivalent -->
	    <action feature="root_pids" instruction="process_openfile_md5hash"/>
            <action feature="root_pids" instruction="process_memmap_md5hash"/>
            <action feature="pids" instruction="process_namespaces"/>
	    <action feature="pids" instruction="proc_fds"/>
	    <action feature="pids" instruction="got_measure"/>
	  </instruction>	  
 
	  <instruction type="submeasure" name="process_openfile_sha1hash">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	    <measurement_type name="path_list" magic="3201" />
	    <action feature="reg_files" instruction="file_sha1hash" />
	  </instruction>
	  <instruction type="submeasure" name="process_openfile_md5hash">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	    <measurement_type name="path_list" magic="3201" />
	    <action feature="reg_files" instruction="file_md5hash" />
            <action feature="reg_files" instruction="pkg_inv_simple_file" />
	  </instruction>
      	  <instruction type="submeasure" name="process_memmap_md5hash">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	    <measurement_type name="mappings_measurement_type" magic="3300" />
	    <action feature="reg_files" instruction="file_md5hash" />
            <action feature="executable_segments" instruction="pidrange_hash" />
            <!--<action feature="reg_files" instruction="pkg_inv_file" />-->
	  </instruction>
	  <instruction type="simple" name="file_sha1hash">
	    <target_type      name="file_target_type" magic="1001" />
	    <address_type     name="simple_file" magic="0x5F5F5F5F" />
	    <measurement_type name="sha1hash_measurement_type" magic="3100" />
	  </instruction>

 	  <instruction type="simple" name="process_namespaces">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	    <measurement_type name="namespaces_measurement_type" magic="0x4E414D45" />
	  </instruction>
         
 	  <instruction type="simple" name="proc_fds">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	    <measurement_type name="fds_measurement_type" magic="0x0FD50FD5" />
	  </instruction>

	  <instruction type="simple" name="file_md5hash">
	    <target_type      name="file_target_type" magic="1001" />
	    <address_type     name="simple_file" magic="0x5F5F5F5F" />
	    <measurement_type name="md5hash_measurement_type" magic="0x000777D5" />
	  </instruction>

	  <instruction type="simple" name="pidrange_hash">
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_mem_range" magic="0x0F1DFFFF" />
	    <measurement_type name="sha256_measurment_type" magic="0x0054A256" />
	  </instruction>

	  <instruction type="simple" name="got_measure">
            <measurement_type name="blob_measurement_type" magic="0xB10BB10B" />
	    <target_type      name="process_target_type" magic="0x091D091D" />
	    <address_type     name="pid_address" magic="0x0F1DF1DF" />
	  </instruction>

	  <!-- Gather system information -->
	  <instruction type="simple" name="identify">
	    <target_type      name="system_target_type" magic="0x57513777"/>
	    <address_type     name="unit_address_space" magic="0x50EC50EC" />
	    <measurement_type name="system_measurement_type" magic="5757"/>
	  </instruction>

	  <!-- Take inventory of all of the packages installed on the system.
	       Then, gather detailed data for each package -->
          <instruction type="submeasure" name="pkg_inv">
	    <target_type      name="system_target_type" magic="0x57513777" />
	    <address_type     name="unit_address_space" magic="0x50EC50EC" />
	    <measurement_type name="pkginv_measurement_type" magic="3244"/>
	    <action feature="packages" instruction="package_detail" />
	  </instruction>
          <instruction type="submeasure" name="pkg_inv_simple_file">
	    <target_type      name="file_target_type" magic="1001" />
	    <address_type     name="simple_file" magic="0x5F5F5F5F" />
	    <measurement_type name="pkginv_measurement_type" magic="3244"/>
            <action feature="packages" instruction="package_detail" />
	  </instruction>
          <instruction type="submeasure" name="pkg_inv_file">
	    <target_type      name="file_target_type" magic="1001" />
	    <address_type     name="file_address_space" magic="2000" />
	    <measurement_type name="pkginv_measurement_type" magic="3244"/>
            <action feature="packages" instruction="package_detail" />
	  </instruction>

	  <instruction type="simple" name="package_detail">
	    <target_type      name="package_target_type" magic="0x7F777FC9" />
	    <address_type     name="release_address_space" magic="0x5F5F5FC9" />
	    <measurement_type name="pkg_details_measurement_type" magic="3245" />
	  </instruction>	 

	  <!--Recursively find all of the files in a directory and hash them-->
	  <instruction type="submeasure" name="listdirectory">
	    <target_type      name="file_target_type" magic="1001"/>
	    <address_type     name="file" magic="2000" />
	    <measurement_type name="path_list" magic="3201"/>
	    <action feature="files" instruction="file_md5hash"/>
	    <action feature="directories" instruction="listdirectory"/>
	  </instruction>

	  <!--Read mntents from a mtab file-->
	  <instruction type="simple" name="mtab">
	    <target_type   name="file_target_type" magic="1001"/>
	    <address_type  name="simple_file"      magic="0x5F5F5F5F"/>
	    <measurement_type name="mtab_measurement_type" magic="0xABCDABCD"/>
	  </instruction>
	</instructions>
	<variables>
	  <!-- Variables for measurements of the privileged layer -->
	  <variable instruction="request">
            <address operation="measure">@0 runtime_meas</address>
          </variable>

	  <variable instruction="request">
            <address operation="measure">@0 userspace</address>
          </variable>

	  <variable instruction="request">
            <address operation="measure">@md runtime_meas</address>
          </variable>
	  
	  <!-- Variable to identify the host system -->
	  <variable instruction="identify">
	    <address operation="identify">self</address>
	  </variable>

	  <!-- Variable to enumerate all of the processes running -->
	  <!-- NOTE: Needs identify variable in order to do whole pid-file-package msmt-->
	  <variable instruction="list_processes">
	    <address operation="enumerate">all</address>
	  </variable>

	  <!-- Variable to take inventory of all of the packages on the system -->
	  <!-- NOTE: Needs identify variable in order to do anything -->
	  <variable instruction="pkg_inv">
	    <address operation="inventory">all</address>
	  </variable>

	  <!-- Take a md5hash of all of the files listed here -->
	  <variable instruction="file_md5hash" scope="one">
	    <!-- dbus executables -->
	    <address operation="equal">/bin/dbus-binding-tool</address>
	    <address operation="equal">/bin/dbus-cleanup-sockets</address>
	    <address operation="equal">/bin/dbus-daemon</address>
	    <address operation="equal">/bin/dbus-launch</address>
	    <address operation="equal">/bin/dbus-monitor</address>
	    <address operation="equal">/bin/dbus-send</address>
	    <address operation="equal">/bin/dbus-uuidgen</address>
	    <!-- sbin files -->
	    <address operation="equal">/sbin/init</address>
	    <address operation="equal">/sbin/insmod</address>
	    <address operation="equal">/sbin/lsmod</address>
	    <address operation="equal">/sbin/ifconfig</address>
	    <address operation="equal">/sbin/udevd</address>
	    <address operation="equal">/sbin/initctl</address>
	  </variable>

	  <!-- Take md5hash of all of the files listed in the following directories -->
	  <!-- NOTE: Requires sudo -->
	  <variable instruction="listdirectory" scope="one">
	    <!-- unit file locations -->
	    <address operation="equal">/run/systemd/generator.early/</address>
	    <address operation="equal">/etc/systemd/system/</address>
	    <address operation="equal">/run/systemd/systemd/</address>
	    <address operation="equal">/run/systemd/generator/</address>
	    <address operation="equal">/usr/local/lib/systemd/system/</address>
	    <address operation="equal">/usr/lib/systemd/system/</address>
	    <address operation="equal">/run/systemd/generator.late/</address>
	    <!-- systemd executables (includes udev) -->
	    <address operation="equal">/lib/systemd/</address>
	    <!-- etc -->
            <!-- XXX: time consuming and disabled for demo -->
	    <!--<address operation="equal">/etc/</address>-->
	  </variable>
	    
	    <!-- Read mntents from mtab file -->
	    <variable instruction="mtab" >
	      <address operation="equal">/proc/mounts</address>
	    </variable>

	    <variable instruction="request">
              <address operation="measure">@t runtime_meas</address>
            </variable>

	    <variable instruction="request">
            <address operation="measure">@t userspace-mtab</address>
          </variable>
	</variables>
</measurement_specification>
