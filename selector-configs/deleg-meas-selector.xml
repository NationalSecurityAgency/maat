<!--
# Copyright 2024 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<!--This selector policy demonstrates measurement and appraisal using
    the delegated measurement ASPs/APBs.
-->
<selector_policy>

  <!--Appraiser creates an initial contract after receiving a request contract.
      This contract specifies a request for the delegated measurement from the
      attester
  -->
  <rule role="appraiser" phase="initial">
    <action selector_action="accept">
      <condition name="deleg_meas"  apb_phrase="(DELEG meas)"/>
    </action>
  </rule>

  <!--Attester creates a modified contract after receiving a initial contract.
      This contract will specify that the attester accepts taking a delegated
      measuremnt
  -->
  <rule role="attester" phase="modify">
    <action selector_action="accept">
      <condition name="deleg_meas"  apb_phrase="(DELEG meas)"/>
    </action>
  </rule>

  <!--Appraiser received the modified contract from the attester
      and creates an execute contract with only one option, the
      delegated measurement.
  -->
  <rule role="appraiser" phase="execute">
    <match_condition attr="resource" operator="is" value="deleg_meas"/>
    <action selector_action="accept">
      <condition name="deleg_meas"            apb_phrase="(DELEG meas)"/>
    </action>
  </rule>

  <!--Appraiser selects a complementary phrase to spawn itself
      in order to receive and appraise the results from the attester.
  -->
  <rule role="appraiser" phase="spawn">
    <match_condition attr="resource" operator="is" value="deleg_meas"/>
    <action selector_action="accept">
      <condition name="deleg_meas"  apb_phrase="(DELEG app)"/>
    </action>
  </rule>
</selector_policy>
