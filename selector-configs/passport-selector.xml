<!--
# Copyright 2023 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
-->
<!--This selector policy demonstrates the exhange and appraisal of a
    passport as part of the passport use case -->
<selector_policy>
    <collection name="known-clients">
        <entry>127.0.0.1</entry>
        <entry>client2</entry>
	<entry>localhost</entry>
    </collection>

    <!--Appraiser creates an initial contract after receiving a request contract.
	Check identity of client and send copland phrase.
    -->
    <rule role="appraiser" phase="initial">
        <match_condition attr="client"  operator="in" value="known-clients" />
        <action selector_action="accept">
	      <condition name="passport"  apb_phrase="@_1(@_2((USM passport) -> SIG))"/>
	</action>
    </rule>

    <!--Attester has received an initial contract from the appraiser
	and creates a modified contract from the otpions received. 
    -->
    <rule role="attester" phase="modify">
        <action selector_action="accept">
	  <condition name="passport"  apb_phrase="@_1(@_2((USM passport) -> SIG))"/>
  	</action>
    </rule>

    <!--Appraiser received the modified contract from the attester
	and creates an execute contract with only one option. 
    -->
    <rule role="appraiser" phase="execute">
        <action selector_action="accept">
	      <condition name="passport"  apb_phrase="@_1(@_2((USM passport) -> SIG))"/>
	</action>
    </rule>

    <!--Appraiser selects a complementary phrase to spawn itself
	in order to receive and appraise the results from the attester.
    -->
    <rule role="appraiser" phase="spawn">
	<action selector_action="accept">
                <condition name="passport_appraiser"  apb_phrase="(USM passapp)"/>
        </action>
    </rule>

</selector_policy>
