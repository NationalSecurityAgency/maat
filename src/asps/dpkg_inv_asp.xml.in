<?xml version="1.0"?>
<!--
# Copyright 2020 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
-->
<asp>
	<name>dpkg_inv</name>
	<uuid>cd82c9f7-760d-4535-bcab-74f4debaca9e</uuid>
	<type>System</type>
	<description>Take inventory of the packages on the system with dpkg</description>
	<aspfile hash="XXXXXX">${ASP_INSTALL_DIR}/dpkg_inv_asp</aspfile>
	<measurers>
	</measurers>
	<security_context>
	  <selinux><type>dpkg_inv_asp_t</type></selinux>
	  <user>${MAAT_USER}</user>
	  <group>${MAAT_GROUP}</group>
   	 </security_context>
	 <usage>
         dpkg_inv_asp [graph path] [node id]</usage>
        <inputdescription>
        This ASP expects a measurement graph path and a node identifier as arguments on the command line.
        The node identified must have target type file_target_type and address space unit_address_space.
        The ASP preforms an dpkg command with the --list option to return a list of all dpkg packages.
        This list is stored in the file_target_type.

        This ASP does not consume any input from stdin</inputdescription>
        <outputdescription>
        This ASP parses the list of rpm releases in the package_target_type and stores the name, version, and
        release data for each package in the measurement type pkginv_measurement_type.

        The ASP marshals the pkginv_measurement_type measurement contents and attaches the data to the node passed as input.

        This ASP produces no output on stdout.</outputdescription>
        <seealso>
		http://manpages.ubuntu.com/manpages/precise/en/man1/dpkg.1.html
	</seealso>
	<example>
	Running dpkg_inv_asp with graph configured by graph-shell

           Terminal 1 (use graph-shell to create graph and insert node)
                $ ./graph-shell
                graph()> types /opt/maat/lib/libmaat_basetypes.so register_types
                graph()> new
                Graph created at /tmp/maatgraphi3iWrI
                graph(/tmp/maatgraphi3iWrI)> add-node 3e9 5f5f5fc9
                0000000000000000

           Terminal 2 (run asp)
                $ ./dpkg_inv_asp /tmp/maatgraphi3iWrI 0

           Terminal 1 (use graph-shell to display node contents)
                graph(/tmp/maatgraphi3iWrI)> node-type 0
                file 000003e9
                graph(/tmp/maatgraphi3iWrI)> ls-data 0
                00000cac: pkginv
                graph(/tmp/maatgraphi3iWrI)> cat-data 0 cac
                RPM Inventory
                        Num Entries: N
                        Total Size: SIZE

			..etc
			
			name: zenity-common
			version:3.8.0
			release:1ubuntu1

			name: zip
			version:3.0
			release:8
	
			name: zlib1g:amd64
			version:1:1.2.8.dfsg
			release:1ubuntu1

			name: zlib1g-dev:amd64
			version:1:1.2.8.dfsg
			release:1ubuntu1
	</example>
</asp>
