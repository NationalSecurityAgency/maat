<?xml version="1.0"?>
<!--
# Copyright 2023 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
-->
<asp>
	<name>elf_reader</name>
	<uuid>3338EB5D-5C2E-4C0F-A8D2-E9D58DDD2D38</uuid>
	<type>File</type>
	<description>Parses executable link information based on elf format</description>
	<usage>
	elf_reader [graph path] [node id]</usage>
	<inputdescription>
        This ASP expects a measurement graph path and a node identifier as arguments on the command line.
        The node identified must have target type file_target_type and address space path_space
        to represent the target executable, whose linkiage information is parsed according to elf format. 

	This ASP does not consume any input from stdin.</inputdescription>
	<outputdescription>
	This ASP produces a elfheader_measurement_type measurement containing linking information about the
	target file and attaches it to the node passed as input.

	This ASP produces no output on stdout.</outputdescription>
	<seealso>
		http://manpages.ubuntu.com/manpages/precise/en/man5/elf.5.html</seealso>
	<example>
 	Running hashfileservice  with graph configured by graph-shell

           Terminal 1 (use graph-shell to create graph and insert node)
		graph$ ./graph-shell 
		graph()>  types /opt/maat/lib/libmaat_basetypes.so register_types
		graph()> new
		Graph created at /tmp/maatgraphZlaMbl
		graph(/tmp/maatgraphZlaMbl)> add-node 3e9 5f5f5f5f /bin/ls
		0000000000000000

	    Terminal 2 (run asp)
		asps$./elf_reader /tmp/maatgraphZlaMbl 0

	    Terminal 3 (use graph-shell to display measurement node)
		graph(/tmp/maatgraphZlaMbl)> ls-data 0
		00000c82: elfheader
		graph(/tmp/maatgraphZlaMbl)> cat-data 0 c82
		file: /bin/ls
		phdr[0]: {
			type:   PT_PHDR
			flags:  R-X [400000005]
			offset: 0000000000000040
			vaddr:  0000000000400040
			paddr:  0000000000400040
			filesz: 00000000000001f8
			memsz:  00000000000001f8
			align:  0000000000000008
		}
		...
		shdr[0]: {
			name: .interp
			offset: 238
			size:   1c
		}
		shdr[1]: {
			name: .note.ABI-tag
			offset: 254
			size:   20
		}
		...
	</example>
	<aspfile hash="XXXXXX">${ASP_INSTALL_DIR}/elf_reader</aspfile>
	<measurers>
		<satisfier id="0">
			<value name="type">GRAPH</value>
			<capability target_type="file_target_type" target_magic="1001" target_desc = "An instance of target type, which describes atributes of the target file" 
				address_type="path_address_space" address_magic="0x5F5F5F5F" address_desc = "An instance of address type that decribes the file address, for this asp it is a path. This includes file information such as address, device major/minor, file size, node, and full name." 
                                    measurement_type="elfheader_measurement_type" measurement_magic="3202" measurement_desc = "An instance of measurement type that describes the content of the elf file targeit. This includes describing all information from the Elf header and symbols of the file." />
		</satisfier>
	</measurers>
	<security_context>
	  <selinux><type>readelf_asp_t</type></selinux>
	  <user>${MAAT_USER}</user>
	  <group>${MAAT_GROUP}</group>
	</security_context>
</asp>
