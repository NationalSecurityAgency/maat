<?xml version="1.0"?>
<!--
# Copyright 2023 United States Government
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 
-->
<asp>
	<name>whitelist</name>
	<uuid>b4cda8d8-4361-45b1-a4da-d54af4257362</uuid>
	<type>Appraisal</type>
	<description>whitelist appraisal plugin</description>
	<aspfile hash="XXXXXX">${ASP_INSTALL_DIR}/whitelist</aspfile>
	<measurers>
		<satisfier id="0">
			<value name="type">BLOB</value>
                        <value name="target">whitelist</value>
		</satisfier>
	</measurers>
	<security_context>
	  <selinux><type>whitelist_t</type></selinux>
	  <user>maat</user>
  	</security_context>
	<usage>
                whitelist [graph path] [node id] [measurement type]</usage>
        <inputdescription>
        This ASP expects a measurement graph path, a node identifier, and a measurement type as arguments on the command line.
        The node identified must have target type module_target_type and address space kernel_address_space
        to represent the list of modules loaded into the system. The node must also have the measurement type kmod_measurement_type or process module type. Either the name of the process or module will be checked against Maat's whitelist.

        This ASP does not consume any input from stdin.</inputdescription>
        <outputdescription>
                This ASP produces a report_measurement_data measurement containing the result of if the module/process was in Maat's whitelist.

                This ASP does not produce any output to stdin. </outputdescription>
        <seealso>
                blacklist
        </seealso>

	<example>
        Running whitelist asp with graph configured by graph-shell

           Terminal 1 (use graph-shell to create graph and insert node)
                $ ./graph-shell
                graph()> types /opt/maat/lib/libmaat_basetypes.so register_types
                graph()> new
                Graph created at /tmp/maatgraphceHVZu
                graph(/tmp/maatgraphceHVZu)> add-node 0d0d0d0d 71d071d0
                0000000000000000

           Terminal 2 (first run lsmod asp to generate a module kernel module node)
                $ ./lsmod /tmp/maatgraphceHVZu 0

           Terminal 1 (use graph-shell to display node contents)
                graph(/tmp/maatgraphceHVZu)> node-type 0
                module 0d0d0d0d
                graph(/tmp/maatgraph4YCBxh)> ls-data 0
                0e0d0e0d: kmodule
                graph(/tmp/maatgraphceHVZu)> cat-data 0 0e0d0e0d
                Module:         "nls_utf8"
                Size:           12557
                Refcnt:         1
                Status:         "Live"
                Load Address:   0

           Terminal 3
           Update whitelist file (/opt/maat/share/maat/asps/module.whitelist) so that
           includes "nls_utf8" module.


           Terminal 2 (now run whitelist asp)
                $ ./whitelist /tmp/maatgraphceHVZu 0 0e0d0e0d

                Terminal 1 (Verify that the report measurement is added and identifies the
                                module as found)
                graph(/tmp/maatgraphceHVZu)> ls-data 0
                10000000: report
                0e0d0e0d: kmodule
                graph(/tmp/maatgraphceHVZu)> cat-data 0 10000000
                        Report:         "OK"
        </example>
</asp>
